<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ErrorRegisteringUser" xml:space="preserve">
    <value>There was an error registering your user.</value>
  </data>
  <data name="PasswordsDontMatch" xml:space="preserve">
    <value>Please make sure the passwords match.</value>
  </data>
  <data name="SheetNrOfNr" xml:space="preserve">
    <value>Sheet {0} of {1}</value>
  </data>
  <data name="Brainstorming" xml:space="preserve">
    <value>Brainstorming</value>
  </data>
  <data name="DontUseProhibitedChars" xml:space="preserve">
    <value>Please don't use any of the prohibited characters.</value>
  </data>
  <data name="FillNecessaryFields" xml:space="preserve">
    <value>Please fill in all the necessary fields.</value>
  </data>
  <data name="UseNumbersInFields" xml:space="preserve">
    <value>Please use numbers in the corresponding fields.</value>
  </data>
  <data name="ProhibitedCharsText" xml:space="preserve">
    <value>Prohibited characters (comma-separated, including whitespace): {0}</value>
  </data>
  <data name="ClickToStartBrainstorming" xml:space="preserve">
    <value>Click on the icon to start Brainstorming.</value>
  </data>
  <data name="BrainstormingFindings" xml:space="preserve">
    <value>Brainstorming Findings</value>
  </data>
  <data name="MemberCountString" xml:space="preserve">
    <value>{0} of {1} Members joined.</value>
  </data>
  <data name="BottomOverlayText" xml:space="preserve">
    <value>Found Team, placing call to join it..</value>
  </data>
  <data name="SomethingWrongTryAgain" xml:space="preserve">
    <value>Something went wrong, please try again.</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Success!</value>
  </data>
  <data name="MyTeams" xml:space="preserve">
    <value>My Teams</value>
  </data>
  <data name="LoginError" xml:space="preserve">
    <value>There was an error with your login, please try again.</value>
  </data>
  <data name="CreateAccount" xml:space="preserve">
    <value>Create Account</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>Firstname</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Lastname</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="RepeatPassword" xml:space="preserve">
    <value>Repeat Password</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="Completed" xml:space="preserve">
    <value>Completed</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="FindingName" xml:space="preserve">
    <value>Brainstorming Finding Name</value>
  </data>
  <data name="NrOfIdeas" xml:space="preserve">
    <value>Number of Ideas</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NrOfIdeasPlaceholder" xml:space="preserve">
    <value># Ideas</value>
  </data>
  <data name="IdeasDescription" xml:space="preserve">
    <value>Choose how many ideas you want to have in one round</value>
  </data>
  <data name="RoundTime" xml:space="preserve">
    <value>Round Time</value>
  </data>
  <data name="RoundTimeText" xml:space="preserve">
    <value>Base Round Time in mins</value>
  </data>
  <data name="RoundTimeDescription" xml:space="preserve">
    <value>Choose what your base round time will be. This will be incremented by 1 min every round</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="BrainstormingDescription" xml:space="preserve">
    <value>Short Description of the topic the brainstorming is about.</value>
  </data>
  <data name="CreateFinding" xml:space="preserve">
    <value>Create Finding</value>
  </data>
  <data name="StartBrainstorming" xml:space="preserve">
    <value>Start Brainstorming</value>
  </data>
  <data name="AddFinding" xml:space="preserve">
    <value>Add Brainstorming Finding</value>
  </data>
  <data name="NoFindingsYet" xml:space="preserve">
    <value>There are no brainstorming findings for this team yet.. 
Add a brainstorming finding below or wait till another team member creates one.</value>
  </data>
  <data name="InviteMembers" xml:space="preserve">
    <value>Invite Team Members</value>
  </data>
  <data name="TellMembersToJoin" xml:space="preserve">
    <value>Tell your team members to scan the QR-Code to join the team</value>
  </data>
  <data name="JoinTeam" xml:space="preserve">
    <value>Join Team</value>
  </data>
  <data name="PlaceQrInArea" xml:space="preserve">
    <value>Place the code inside the area</value>
  </data>
  <data name="CreateTeam" xml:space="preserve">
    <value>Create a new Team</value>
  </data>
  <data name="TeamName" xml:space="preserve">
    <value>Team Name</value>
  </data>
  <data name="NameConstraints" xml:space="preserve">
    <value>Names must be shorter than 22 characters and without spaces or periods.</value>
  </data>
  <data name="TeamSize" xml:space="preserve">
    <value>Team Size</value>
  </data>
  <data name="TeamSizeText" xml:space="preserve">
    <value>Number of Participants</value>
  </data>
  <data name="TeamSizeDescription" xml:space="preserve">
    <value>Choose how many participants the team should have</value>
  </data>
  <data name="Purpose" xml:space="preserve">
    <value>Purpose (optional)</value>
  </data>
  <data name="PurposeText" xml:space="preserve">
    <value>Briefly describe the purpose of your team</value>
  </data>
  <data name="LeaveTeam" xml:space="preserve">
    <value>Leave Team</value>
  </data>
  <data name="AddTeam" xml:space="preserve">
    <value>Add Brainstorming Team</value>
  </data>
  <data name="NoTeamYet" xml:space="preserve">
    <value>You don't belong to a team yet.. 
Join or add a team below</value>
  </data>
  <data name="LoginTitle" xml:space="preserve">
    <value>Login to Brainstorming</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Method635" xml:space="preserve">
    <value>Method 635</value>
  </data>
  <data name="InvalidRoundTime" xml:space="preserve">
    <value>Please choose a round time greater than 0.</value>
  </data>
  <data name="InvalidNrOfIdeas" xml:space="preserve">
    <value>Please choose a number of ideas greater than 0.</value>
  </data>
  <data name="Team" xml:space="preserve">
    <value>Team</value>
  </data>
  <data name="IdeaDescription" xml:space="preserve">
    <value>Idea Description:</value>
  </data>
  <data name="Commit" xml:space="preserve">
    <value>Commit</value>
  </data>
</root>